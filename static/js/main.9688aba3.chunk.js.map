{"version":3,"sources":["App.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","text","handleChange","event","setState","target","value","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","s","SearchForm","this","type","SearchForm__button","SearchForm_button__label","onChange","SearchForm__input","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","webformatURL","largeImageURL","tags","setModalImgInfo","src","alt","onClick","ImageGalleryItem__image","ImageGallery","images","map","id","Button","onLoadMore","modalRoot","document","querySelector","Modal","handleKeyPressESC","code","onClose","handleClickBackdrop","currentTarget","window","addEventListener","removeEventListener","createPortal","Overlay","children","PureComponent","App","page","showModal","status","fetchImages","request","fetch","then","res","json","array","hits","length","prevState","handlePageScroll","catch","toggleModal","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","Loader","color","height","width","timeout","transition","Zoom","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9688aba3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3rqe5\",\"App-logo\":\"App_App-logo__3_ALd\",\"App-logo-spin\":\"App_App-logo-spin__PACxv\",\"App-header\":\"App_App-header__3Qv94\",\"App-link\":\"App_App-link__3tZUH\",\"Loader\":\"App_Loader__1PoF9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem__image\":\"ImageGalleryItem_ImageGalleryItem__image__1SFgi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3huq9\",\"Modal\":\"Modal_Modal__17U-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3xhy2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__M9I5C\"};","import { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Searchbar.module.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    text: '',\r\n  };\r\n  handleChange = event => {\r\n    this.setState({\r\n      text: event.target.value,\r\n    });\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.text.trim() === '') {\r\n      return toast.error('Enter search');\r\n    }\r\n    this.props.onSubmit(this.state.text);\r\n    this.setState({\r\n      text: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className= {s.SearchForm__button}>\r\n            <span className= {s.SearchForm_button__label} >Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={this.handleChange}\r\n            className={s.SearchForm__input}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\n export default Searchbar","import s from './ImageGalleryItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n function ImageGalleryItem({ webformatURL, largeImageURL, tags, setModalImgInfo }) {\r\n  return (\r\n    <li className={s.ImageGalleryItem}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        onClick={() => setModalImgInfo({ largeImageURL, tags })}\r\n              className={s.ImageGalleryItem__image}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  setModalImgInfo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport s from'./ImageGallery.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n function ImageGallery({ images, setModalImgInfo }) {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {images.map(({ webformatURL, largeImageURL, tags, id }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          tags={tags}\r\n          setModalImgInfo={setModalImgInfo}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  setModalImgInfo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery","import s from'./Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n function Button({ onLoadMore }) {\r\n  return (\r\n    <button type=\"button\" className={s.Button} onClick={onLoadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PropTypes.func.isRequired,\r\n};\r\nexport default Button","import React, { PureComponent } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from'./Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\n class Modal extends PureComponent {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyPressESC);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyPressESC);\r\n  }\r\n\r\n   handleKeyPressESC = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleClickBackdrop = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className={s.Overlay} onClick={this.handleClickBackdrop}>\r\n        <div className={s.Modal}>{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Modal","import React, { Component } from 'react';\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport  s from'./App.module.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button'\nimport Modal from './components/Modal';\n\nexport default class App extends Component {\n  state = {\n    text: '',\n    page: 1,\n    images: [],\n    showModal: false,\n    error: null,\n    status: 'idle',\n    largeImageURL: null,\n    tags: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.text;\n    const nextQuery = this.state.text;\n\n    if (prevQuery !== nextQuery) {\n      this.setState({ images: [], page: 1 });\n      setTimeout(() => {\n        this.fetchImages();\n      }, 1000);\n    }\n  }\n\n  fetchImages = () => {\n    const API_KEY = '22920296-83f622dc6fe28ab18a69af7db';\n    const BASE_URL = 'https://pixabay.com/api';\n    const { text, page } = this.state;\n    const perPage = 12;\n    const request = `/?image_type=photo&orientation=horizontal&q=${text}&page=${page}&per_page=${perPage}&key=${API_KEY}`;\n\n    this.setState({ status: 'pending' });\n\n    fetch(BASE_URL + request)\n      .then(res => res.json())\n      .then(array => {\n        const images = array.hits;\n        if (images.length < 1) {\n          toast.error('Nothing found, specify your search');\n        }\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          status: 'resolved',\n          page: prevState.page + 1,\n        }));\n        this.handlePageScroll();\n      })\n      .catch(error => this.setState({ error, status: 'rejected' }));\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  setModalImgInfo = ({ largeImageURL, tags }) => {\n    this.setState({ largeImageURL, tags });\n    this.toggleModal();\n  };\n\n  handlePageScroll = () => {\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }, 1000);\n  };\n\n  onSubmit = text => {\n    this.setState({ text });\n  };\n\n  onLoadMore = () => {\n    this.fetchImages();\n  };\n\n  render() {\n    const { images, showModal, largeImageURL, tags, status } = this.state;\n    return (\n      <>\n        <div className={s.App}>\n          <Searchbar onSubmit={this.onSubmit} />\n          {status === 'pending' && (\n            <Loader\n              className={s.Loader}\n              type=\"TailSpin\"\n              color=\"#c5000a\"\n              height={150}\n              width={150}\n              timeout={2000}\n              \n            />\n          )}\n          <ImageGallery images={images} setModalImgInfo={this.setModalImgInfo} />\n          {images.length > 0 && <Button onLoadMore={this.onLoadMore} />}\n          {showModal && (\n            <Modal onClose={this.toggleModal}>\n              <img src={largeImageURL} alt={tags} />\n            </Modal>\n          )}\n        </div>\n        <ToastContainer transition={Zoom} autoClose={3000} />\n      </>\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3ZT3l\",\"SearchForm\":\"Searchbar_SearchForm__3QaLh\",\"SearchForm__button\":\"Searchbar_SearchForm__button__2w7rz\",\"SearchForm_button__label\":\"Searchbar_SearchForm_button__label__VuFh9\",\"SearchForm__input\":\"Searchbar_SearchForm__input__1uQ2b\"};"],"sourceRoot":""}